// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: submission/v1/submission.proto

package submissionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SubmissionType represents the different types of submission as kudo or fine.
type SubmissionType int32

const (
	SubmissionType_SUBMISSION_TYPE_UNSPECIFIED SubmissionType = 0
	SubmissionType_SUBMISSION_TYPE_KUDO        SubmissionType = 1 // Good
	SubmissionType_SUBMISSION_TYPE_FINE        SubmissionType = 2 // Bad
	SubmissionType_SUBMISSION_TYPE_BOTH        SubmissionType = 3 // Both
)

// Enum value maps for SubmissionType.
var (
	SubmissionType_name = map[int32]string{
		0: "SUBMISSION_TYPE_UNSPECIFIED",
		1: "SUBMISSION_TYPE_KUDO",
		2: "SUBMISSION_TYPE_FINE",
		3: "SUBMISSION_TYPE_BOTH",
	}
	SubmissionType_value = map[string]int32{
		"SUBMISSION_TYPE_UNSPECIFIED": 0,
		"SUBMISSION_TYPE_KUDO":        1,
		"SUBMISSION_TYPE_FINE":        2,
		"SUBMISSION_TYPE_BOTH":        3,
	}
)

func (x SubmissionType) Enum() *SubmissionType {
	p := new(SubmissionType)
	*p = x
	return p
}

func (x SubmissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_submission_v1_submission_proto_enumTypes[0].Descriptor()
}

func (SubmissionType) Type() protoreflect.EnumType {
	return &file_submission_v1_submission_proto_enumTypes[0]
}

func (x SubmissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmissionType.Descriptor instead.
func (SubmissionType) EnumDescriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{0}
}

// Submission represents a submission in the submission store.
type Submission struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId   string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	SubmissionType SubmissionType         `protobuf:"varint,2,opt,name=submission_type,json=submissionType,proto3,enum=submission.v1.SubmissionType" json:"submission_type,omitempty"`
	Title          string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_submission_v1_submission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{0}
}

func (x *Submission) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *Submission) GetSubmissionType() SubmissionType {
	if x != nil {
		return x.SubmissionType
	}
	return SubmissionType_SUBMISSION_TYPE_UNSPECIFIED
}

func (x *Submission) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Submission) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Submission) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Submission) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetSubmissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionRequest) Reset() {
	*x = GetSubmissionRequest{}
	mi := &file_submission_v1_submission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionRequest) ProtoMessage() {}

func (x *GetSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionRequest.ProtoReflect.Descriptor instead.
func (*GetSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{1}
}

func (x *GetSubmissionRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type GetSubmissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionResponse) Reset() {
	*x = GetSubmissionResponse{}
	mi := &file_submission_v1_submission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionResponse) ProtoMessage() {}

func (x *GetSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionResponse.ProtoReflect.Descriptor instead.
func (*GetSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{2}
}

func (x *GetSubmissionResponse) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type CreateSubmissionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubmissionType SubmissionType         `protobuf:"varint,1,opt,name=submission_type,json=submissionType,proto3,enum=submission.v1.SubmissionType" json:"submission_type,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSubmissionRequest) Reset() {
	*x = CreateSubmissionRequest{}
	mi := &file_submission_v1_submission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionRequest) ProtoMessage() {}

func (x *CreateSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubmissionRequest) GetSubmissionType() SubmissionType {
	if x != nil {
		return x.SubmissionType
	}
	return SubmissionType_SUBMISSION_TYPE_UNSPECIFIED
}

func (x *CreateSubmissionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSubmissionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateSubmissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubmissionResponse) Reset() {
	*x = CreateSubmissionResponse{}
	mi := &file_submission_v1_submission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionResponse) ProtoMessage() {}

func (x *CreateSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionResponse.ProtoReflect.Descriptor instead.
func (*CreateSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSubmissionResponse) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type UpdateSubmissionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId   string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	SubmissionType *SubmissionType        `protobuf:"varint,2,opt,name=submission_type,json=submissionType,proto3,enum=submission.v1.SubmissionType,oneof" json:"submission_type,omitempty"`
	Title          *string                `protobuf:"bytes,3,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Description    *string                `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateSubmissionRequest) Reset() {
	*x = UpdateSubmissionRequest{}
	mi := &file_submission_v1_submission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubmissionRequest) ProtoMessage() {}

func (x *UpdateSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubmissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSubmissionRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *UpdateSubmissionRequest) GetSubmissionType() SubmissionType {
	if x != nil && x.SubmissionType != nil {
		return *x.SubmissionType
	}
	return SubmissionType_SUBMISSION_TYPE_UNSPECIFIED
}

func (x *UpdateSubmissionRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateSubmissionRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type UpdateSubmissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submission    *Submission            `protobuf:"bytes,1,opt,name=submission,proto3" json:"submission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubmissionResponse) Reset() {
	*x = UpdateSubmissionResponse{}
	mi := &file_submission_v1_submission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubmissionResponse) ProtoMessage() {}

func (x *UpdateSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubmissionResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSubmissionResponse) GetSubmission() *Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

type DeleteSubmissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  string                 `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubmissionRequest) Reset() {
	*x = DeleteSubmissionRequest{}
	mi := &file_submission_v1_submission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmissionRequest) ProtoMessage() {}

func (x *DeleteSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSubmissionRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type DeleteSubmissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubmissionResponse) Reset() {
	*x = DeleteSubmissionResponse{}
	mi := &file_submission_v1_submission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubmissionResponse) ProtoMessage() {}

func (x *DeleteSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_submission_v1_submission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubmissionResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_submission_v1_submission_proto_rawDescGZIP(), []int{8}
}

var File_submission_v1_submission_proto protoreflect.FileDescriptor

const file_submission_v1_submission_proto_rawDesc = "" +
	"\n" +
	"\x1esubmission/v1/submission.proto\x12\rsubmission.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa7\x02\n" +
	"\n" +
	"Submission\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\x12F\n" +
	"\x0fsubmission_type\x18\x02 \x01(\x0e2\x1d.submission.v1.SubmissionTypeR\x0esubmissionType\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\";\n" +
	"\x14GetSubmissionRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"R\n" +
	"\x15GetSubmissionResponse\x129\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x19.submission.v1.SubmissionR\n" +
	"submission\"\x99\x01\n" +
	"\x17CreateSubmissionRequest\x12F\n" +
	"\x0fsubmission_type\x18\x01 \x01(\x0e2\x1d.submission.v1.SubmissionTypeR\x0esubmissionType\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"U\n" +
	"\x18CreateSubmissionResponse\x129\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x19.submission.v1.SubmissionR\n" +
	"submission\"\xfb\x01\n" +
	"\x17UpdateSubmissionRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\x12K\n" +
	"\x0fsubmission_type\x18\x02 \x01(\x0e2\x1d.submission.v1.SubmissionTypeH\x00R\x0esubmissionType\x88\x01\x01\x12\x19\n" +
	"\x05title\x18\x03 \x01(\tH\x01R\x05title\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x02R\vdescription\x88\x01\x01B\x12\n" +
	"\x10_submission_typeB\b\n" +
	"\x06_titleB\x0e\n" +
	"\f_description\"U\n" +
	"\x18UpdateSubmissionResponse\x129\n" +
	"\n" +
	"submission\x18\x01 \x01(\v2\x19.submission.v1.SubmissionR\n" +
	"submission\">\n" +
	"\x17DeleteSubmissionRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\tR\fsubmissionId\"\x1a\n" +
	"\x18DeleteSubmissionResponse*\x7f\n" +
	"\x0eSubmissionType\x12\x1f\n" +
	"\x1bSUBMISSION_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14SUBMISSION_TYPE_KUDO\x10\x01\x12\x18\n" +
	"\x14SUBMISSION_TYPE_FINE\x10\x02\x12\x18\n" +
	"\x14SUBMISSION_TYPE_BOTH\x10\x032\xa6\x03\n" +
	"\x11SubmissionService\x12\\\n" +
	"\rGetSubmission\x12#.submission.v1.GetSubmissionRequest\x1a$.submission.v1.GetSubmissionResponse\"\x00\x12e\n" +
	"\x10CreateSubmission\x12&.submission.v1.CreateSubmissionRequest\x1a'.submission.v1.CreateSubmissionResponse\"\x00\x12e\n" +
	"\x10UpdateSubmission\x12&.submission.v1.UpdateSubmissionRequest\x1a'.submission.v1.UpdateSubmissionResponse\"\x00\x12e\n" +
	"\x10DeleteSubmission\x12&.submission.v1.DeleteSubmissionRequest\x1a'.submission.v1.DeleteSubmissionResponse\"\x00B\xb7\x01\n" +
	"\x11com.submission.v1B\x0fSubmissionProtoP\x01Z<github.com/muhlemmer/kudofine/gen/submission/v1;submissionv1\xa2\x02\x03SXX\xaa\x02\rSubmission.V1\xca\x02\rSubmission\\V1\xe2\x02\x19Submission\\V1\\GPBMetadata\xea\x02\x0eSubmission::V1b\x06proto3"

var (
	file_submission_v1_submission_proto_rawDescOnce sync.Once
	file_submission_v1_submission_proto_rawDescData []byte
)

func file_submission_v1_submission_proto_rawDescGZIP() []byte {
	file_submission_v1_submission_proto_rawDescOnce.Do(func() {
		file_submission_v1_submission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_submission_v1_submission_proto_rawDesc), len(file_submission_v1_submission_proto_rawDesc)))
	})
	return file_submission_v1_submission_proto_rawDescData
}

var file_submission_v1_submission_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_submission_v1_submission_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_submission_v1_submission_proto_goTypes = []any{
	(SubmissionType)(0),              // 0: submission.v1.SubmissionType
	(*Submission)(nil),               // 1: submission.v1.Submission
	(*GetSubmissionRequest)(nil),     // 2: submission.v1.GetSubmissionRequest
	(*GetSubmissionResponse)(nil),    // 3: submission.v1.GetSubmissionResponse
	(*CreateSubmissionRequest)(nil),  // 4: submission.v1.CreateSubmissionRequest
	(*CreateSubmissionResponse)(nil), // 5: submission.v1.CreateSubmissionResponse
	(*UpdateSubmissionRequest)(nil),  // 6: submission.v1.UpdateSubmissionRequest
	(*UpdateSubmissionResponse)(nil), // 7: submission.v1.UpdateSubmissionResponse
	(*DeleteSubmissionRequest)(nil),  // 8: submission.v1.DeleteSubmissionRequest
	(*DeleteSubmissionResponse)(nil), // 9: submission.v1.DeleteSubmissionResponse
	(*timestamppb.Timestamp)(nil),    // 10: google.protobuf.Timestamp
}
var file_submission_v1_submission_proto_depIdxs = []int32{
	0,  // 0: submission.v1.Submission.submission_type:type_name -> submission.v1.SubmissionType
	10, // 1: submission.v1.Submission.created_at:type_name -> google.protobuf.Timestamp
	10, // 2: submission.v1.Submission.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 3: submission.v1.GetSubmissionResponse.submission:type_name -> submission.v1.Submission
	0,  // 4: submission.v1.CreateSubmissionRequest.submission_type:type_name -> submission.v1.SubmissionType
	1,  // 5: submission.v1.CreateSubmissionResponse.submission:type_name -> submission.v1.Submission
	0,  // 6: submission.v1.UpdateSubmissionRequest.submission_type:type_name -> submission.v1.SubmissionType
	1,  // 7: submission.v1.UpdateSubmissionResponse.submission:type_name -> submission.v1.Submission
	2,  // 8: submission.v1.SubmissionService.GetSubmission:input_type -> submission.v1.GetSubmissionRequest
	4,  // 9: submission.v1.SubmissionService.CreateSubmission:input_type -> submission.v1.CreateSubmissionRequest
	6,  // 10: submission.v1.SubmissionService.UpdateSubmission:input_type -> submission.v1.UpdateSubmissionRequest
	8,  // 11: submission.v1.SubmissionService.DeleteSubmission:input_type -> submission.v1.DeleteSubmissionRequest
	3,  // 12: submission.v1.SubmissionService.GetSubmission:output_type -> submission.v1.GetSubmissionResponse
	5,  // 13: submission.v1.SubmissionService.CreateSubmission:output_type -> submission.v1.CreateSubmissionResponse
	7,  // 14: submission.v1.SubmissionService.UpdateSubmission:output_type -> submission.v1.UpdateSubmissionResponse
	9,  // 15: submission.v1.SubmissionService.DeleteSubmission:output_type -> submission.v1.DeleteSubmissionResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_submission_v1_submission_proto_init() }
func file_submission_v1_submission_proto_init() {
	if File_submission_v1_submission_proto != nil {
		return
	}
	file_submission_v1_submission_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_submission_v1_submission_proto_rawDesc), len(file_submission_v1_submission_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_submission_v1_submission_proto_goTypes,
		DependencyIndexes: file_submission_v1_submission_proto_depIdxs,
		EnumInfos:         file_submission_v1_submission_proto_enumTypes,
		MessageInfos:      file_submission_v1_submission_proto_msgTypes,
	}.Build()
	File_submission_v1_submission_proto = out.File
	file_submission_v1_submission_proto_goTypes = nil
	file_submission_v1_submission_proto_depIdxs = nil
}
